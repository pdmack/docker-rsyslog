# systemd section processing

# pid normalization is in viaq-common

if strlen($!_MACHINE_ID) > 0 then {
    # Pull out the systemd "user" and "trusted" journal fields.
    #     # See http://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html
    #
    #         # Pull out the systemd "user" journal fields...
    set $.systemd!t!MACHINE_ID = $!_MACHINE_ID;
    unset $!_MACHINE_ID;
    if strlen($!CODE_FILE) > 0 then {
        set $.systemd!u!CODE_FILE = $!CODE_FILE;
    }
    unset $!CODE_FILE;
    if strlen($!CODE_FUNCTION) > 0 then {
        set $.systemd!u!CODE_FUNCTION = $!CODE_FUNCTION;
    }
    unset $!CODE_FUNCTION;
    if strlen($!CODE_LINE) > 0 then {
        set $.systemd!u!CODE_LINE = $!CODE_LINE;
    }
    unset $!CODE_LINE;
    if strlen($!ERRNO) > 0 then {
        set $.systemd!u!ERRNO = $!ERRNO;
    }
    unset $!ERRNO;
    if strlen($!MESSAGE_ID) > 0 then {
        set $.systemd!u!MESSAGE_ID = $!MESSAGE_ID;
    }
    unset $!MESSAGE_ID;
    if strlen($!RESULT) > 0 then {
        set $.systemd!u!RESULT = $!RESULT;
    }
    unset $!RESULT;
    if strlen($!UNIT) > 0 then {
        set $.systemd!u!UNIT = $!UNIT;
    }
    unset $!UNIT;
    unset $!PRIORITY;
    unset $!SYSLOG_FACILITY;
    unset $!SYSLOG_IDENTIFIER;
    unset $!SYSLOG_PID;

    # Pull out the systemd "trusted" journal fields...
    if strlen($!_AUDIT_LOGINUID) > 0 then {
        set $.systemd!t!AUDIT_LOGINUID = $!_AUDIT_LOGINUID;
    }
    unset $!_AUDIT_LOGINUID;
    if strlen($!_AUDIT_SESSION) > 0 then {
        set $.systemd!t!AUDIT_SESSION = $!_AUDIT_SESSION;
    }
    unset $!_AUDIT_SESSION;
    if strlen($!_BOOT_ID) > 0 then {
        set $.systemd!t!BOOT_ID = $!_BOOT_ID;
    }
    unset $!_BOOT_ID;
    if strlen($!_CAP_EFFECTIVE) > 0 then {
        set $.systemd!t!CAP_EFFECTIVE = $!_CAP_EFFECTIVE;
    }
    unset $!_CAP_EFFECTIVE;
    if strlen($!_CMDLINE) > 0 then {
        set $.systemd!t!CMDLINE = $!_CMDLINE;
    }
    unset $!_CMDLINE;
    unset $!cmd;
    if strlen($!_COMM) > 0 then {
        set $.systemd!t!COMM = $!_COMM;
    }
    unset $!_COMM;
    unset $!appname;
    if strlen($!_EXE) > 0 then {
        set $.systemd!t!EXE = $!_EXE;
    }
    unset $!_EXE;
    unset $!exe;
    if strlen($!_GID) > 0 then {
        set $.systemd!t!GID = $!_GID;
    }
    unset $!_GID;
    unset $!gid;
    if strlen($!_HOSTNAME) > 0 then {
        set $.systemd!t!HOSTNAME = $!_HOSTNAME;
    }
    unset $!_HOSTNAME;
    if strlen($!_SELINUX_CONTEXT) > 0 then {
        set $.systemd!t!SELINUX_CONTEXT = $!_SELINUX_CONTEXT;
    }
    unset $!_SELINUX_CONTEXT;
    if strlen($!_SOURCE_REALTIME_TIMESTAMP) > 0 then {
        set $.systemd!t!SOURCE_REALTIME_TIMESTAMP = $!_SOURCE_REALTIME_TIMESTAMP;
    }
    unset $!_SOURCE_REALTIME_TIMESTAMP;
    if strlen($!_SYSTEMD_CGROUP) > 0 then {
        set $.systemd!t!SYSTEMD_CGROUP = $!_SYSTEMD_CGROUP;
    }
    unset $!_SYSTEMD_CGROUP;
    if strlen($!_SYSTEMD_OWNER_UID) > 0 then {
        set $.systemd!t!SYSTEMD_OWNER_UID = $!_SYSTEMD_OWNER_UID;
    }
    unset $!_SYSTEMD_OWNER_UID;
    if strlen($!_SYSTEMD_SESSION) > 0 then {
        set $.systemd!t!SYSTEMD_SESSION = $!_SYSTEMD_SESSION;
    }
    unset $!_SYSTEMD_SESSION;
    if strlen($!_SYSTEMD_SLICE) > 0 then {
        set $.systemd!t!SYSTEMD_SLICE = $!_SYSTEMD_SLICE;
    }
    unset $!_SYSTEMD_SLICE;
    if strlen($!_SYSTEMD_UNIT) > 0 then {
        set $.systemd!t!SYSTEMD_UNIT = $!_SYSTEMD_UNIT;
    }
    unset $!_SYSTEMD_UNIT;
    if strlen($!_SYSTEMD_USER_UNIT) > 0 then {
        set $.systemd!t!SYSTEMD_USER_UNIT = $!_SYSTEMD_USER_UNIT;
    }
    unset $!_SYSTEMD_USER_UNIT;
    if strlen($!_TRANSPORT) > 0 then {
        set $.systemd!t!TRANSPORT = $!_TRANSPORT;
    }
    unset $!_TRANSPORT;
    if strlen($!_UID) > 0 then {
        set $.systemd!t!UID = $!_UID;
    }
    unset $!_UID;
    unset $!uid;

    # Pull out the systemd "kernel" journal fields...
    if strlen($!_KERNEL_DEVICE) > 0 then {
       set $.systemd!k!KERNEL_DEVICE = $!_KERNEL_DEVICE;
    }
    unset $!_KERNEL_DEVICE;
    if strlen($!_KERNEL_SUBSYSTEM) > 0 then {
       set $.systemd!k!KERNEL_SUBSYSTEM = $!_KERNEL_SUBSYSTEM;
    }
    unset $!_KERNEL_SUBSYSTEM;
    if strlen($!_UDEV_SYSNAME) > 0 then {
       set $.systemd!k!UDEV_SYSNAME = $!_UDEV_SYSNAME;
    }
    unset $!_UDEV_SYSNAME;
    if strlen($!_UDEV_DEVNODE) > 0 then {
       set $.systemd!k!UDEV_DEVNODE = $!_UDEV_DEVNODE;
    }
    unset $!_UDEV_DEVNODE;
    if strlen($!_UDEV_DEVLINK) > 0 then {
       set $.systemd!k!UDEV_DEVLINK = $!_UDEV_DEVLINK;
    }
    unset $!_UDEV_DEVLINK;
} else {
    # Because of how we have defined the template above, where the template
    # encodes the field name directly, we need to have an empty object for
    # $.systemd so that at least an empty set of braces ("{}") is emitted.
    # Without that, we don't have a valid JSON document to index.
    #
    # So to get that empty object whether or not we actually have systemd
    # data to normalize we need to create an object hierarchy and then remove
    # the leaf property.
    set $.systemd!foo = "bar";
    unset $.systemd!foo;
}






